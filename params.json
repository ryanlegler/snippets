{
  "name": "Snippets",
  "tagline": "Array Methods - Misc Js snippets",
  "body": "# Array\r\n\r\n### Create an Array\r\n```\r\nvar fruits = [\"Apple\", \"Banana\"];\r\n```\r\n### Get the length\r\n```\r\nconsole.log(fruits.length);\r\n```\r\n### Get last element\r\n```\r\nvar last = fruits[fruits.length - 1];\r\n```\r\n### Add to the end\r\n```\r\nfruits.push(\"Orange\"); // adds and returns item to the end of the array\r\n```\r\n### add to the front\r\n```\r\nfruits.unshift(\"Strawberry\") // adds and returns item to the beginning of the array\r\n```\r\n### Remove from the end\r\n```\r\nfruits.pop(); // removes and returns last item in the array\r\n```\r\n### Remove from the fron\r\n```\r\nfruits.shift(); // removes and returns first item in the array\r\n```\r\n### Remove an item by index position\r\n```\r\nfruits.splice(pos, 1);\r\n```\r\n### Copy an Array\r\n```\r\nvar shallowCopy = fruits.slice(); // this is how to make a copy\r\n```\r\n### indexOf - get the index of an matching array item\r\n```\r\nvar arr = ['apple', 'orange', 'pear'];\r\nconsole.log(\"found orange\", arr.indexOf(\"orange\") != -1, \"at index of \", arr.indexOf(\"orange\"));\r\n```\r\n### filter\r\n```\r\nvar arr = [\r\n    { \"name\": \"apple\", \"count\": 2 },\r\n    { \"name\": \"orange\", \"count\": 5 },\r\n    { \"name\": \"pear\", \"count\": 3 },\r\n    { \"name\": \"orange\", \"count\": 16 },\r\n];\r\n\r\nvar newArr = arr.filter(function(item) {\r\n    return item.name === \"orange\";\r\n});\r\n\r\nconsole.log(\"Filter results:\", newArr);\r\n```\r\n### map\r\n```\r\nvar oldArr = [\r\n    { first_name: \"Colin\", last_name: \"Toh\" },\r\n    { first_name: \"Addy\", last_name: \"Osmani\" },\r\n    { first_name: \"Yehuda\", last_name: \"Katz\" }\r\n];\r\n\r\nvar newArr = oldArr.map(function(item, index) {\r\n    item.full_name = [item.first_name, item.last_name].join(\" \");\r\n    return item;\r\n});\r\n\r\nconsole.log(\"newArr\", newArr);\r\n```\r\n\r\n###Array to hashmap\r\n```\r\nvar arr = [\r\n    { key: 'foo', val: 'bar' },\r\n    { key: 'hello', val: 'world' }\r\n];\r\n\r\nvar result = arr.reduce(function(map, obj) {\r\n    map[obj.key] = obj.val;\r\n    return map;\r\n}, {});\r\n\r\nconsole.log(result);\r\n// { foo: 'bar', hello: 'world' }\r\n```\r\n\r\n## loops\r\n\r\n### forEach\r\n```\r\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\narr.forEach(function(item, index) {\r\n    console.log(\"forEach\", item);\r\n});\r\n```\r\n### ES6 forEach\r\n```\r\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\narr.forEach(item => console.log(\"ES6 forEach\", item))\r\n```\r\n### for increment\r\n```\r\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\nfor (var i = 0; i < arr.length; i++) {\r\n    console.log(\"for loop increment \",arr[i]);\r\n}\r\n```\r\n### for decrement\r\n```\r\nvar arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\nfor (var i = arr.length - 1; i >= 0; i--) {\r\n    console.log(\"for loop decrement \",arr[i]);\r\n}\r\n```\r\n### find\r\n```\r\nvar arr = [\r\n    {\r\n        type: 'apple',\r\n        color: 'green'\r\n\r\n    },\r\n    {\r\n        type: 'orange',\r\n        color: 'orange'\r\n    }\r\n];\r\nvar find = 'apple';\r\nvar result = arr.find(function (fruit) {\r\n    return fruit.type === find;\r\n})\r\nconsole.log(\"result\",result);\r\n```\r\n\r\n### find ES6\r\n```\r\nvar arr = [\r\n    {\r\n        type: 'apple',\r\n        color: 'green'\r\n\r\n    },\r\n    {\r\n        type: 'orange',\r\n        color: 'orange'\r\n    }\r\n];\r\n\r\nvar find = 'apple';\r\nvar result = arr.find(fruit => fruit.type === find)\r\nconsole.log(\"arr\",result)\r\n```\r\n### concat\r\n```\r\nvar arr1 = [\"1\",\"2\"];\r\nvar arr2 = [\"3\",\"4\"];\r\nvar arr3 = arr1.concat(arr2);\r\nconsole.log(\"arr3\",arr3)\r\n```\r\n### ES6 spread operator\r\n```\r\nvar arr = [\"apple\",\"orange\",\"apple\",\"orange\",\"pear\",\"orange\"];\r\nconsole.log(\"my favorite fruit are \", ...arr)\r\n```\r\n\r\n### ES6 rest operator\r\n```\r\nvar first = {\r\n    \"mango\": {\r\n        \"taste\": \"good\"\r\n    }\r\n}\r\nvar obj = {\r\n    \"apple\": {\r\n        \"taste\": \"good\"\r\n    },\r\n    \"orange\": {\r\n        \"taste\": \"fair\"\r\n    },\r\n    \"pear\": {\r\n        \"taste\": \"bad\"\r\n    },\r\n    \"apple\": {\r\n        \"taste\": \"excellent\"\r\n    }\r\n};\r\n\r\nfunction getObject (first, ...value) {\r\n    return value;\r\n}\r\n\r\nvar objectContents = getObject(first, obj);\r\n\r\nconsole.log(\"objectContents\",objectContents)\r\n```\r\n\r\n# Object\r\n\r\n### for in - iterate over an object by key/property\r\n```\r\nvar obj = {a:1, b:2, c:3};\r\n\r\nfor (var prop in obj) {\r\n  console.log(\"obj.\" + prop + \" = \" + obj[prop]);\r\n}\r\n```\r\n### get length of object\r\n```\r\nvar obj = {\r\n    \"apple\": {\r\n        \"taste\": \"good\"\r\n    },\r\n    \"orange\": {\r\n        \"taste\": \"fair\"\r\n    },\r\n    \"pear\": {\r\n        \"taste\": \"bad\"\r\n    },\r\n    \"apple\": {\r\n        \"taste\": \"excellent\"\r\n    }\r\n};\r\nvar objLength = Object.keys(obj).length + 1;\r\nconsole.log(\"objLength\",objLength);\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}